class System
  self.mmap: λ(address, length, protected, flags, fd, offset)
    allocated_address = 0x00
    asm
      and esp, 4294967280         ; 0xFFFFFF0 - Ensure ESP is 16-byte aligned
      sub esp, 8
      push dword offset.payload
      push dword fd.payload
      push dword flags.payload
      push dword protected.payload
      push dword length.payload
      push dword address.payload
      call "_mmap"
      mov allocated_address.payload, eax ; address returned in eax
      add esp, 32

    return allocated_address

  ; Returns
  self.exit: λ(exit_code)
    asm
      and esp, 4294967280         ; 0xFFFFFF0 - Ensure ESP is 16-byte aligned
      sub esp, 12                  ; 4 bytes padding required by OSX
      push dword exit_code.payload
      call "_exit"
      add esp, 16

  self.print: λ(str)
    asm
      and esp, 4294967280         ; 0xFFFFFF0 - Ensure ESP is 16-byte aligned
      sub esp, 4                  ; 4 bytes padding required to keep alignment
      mov  ebx, str.payload
      push dword [ebx - 4]        ; length of string
      push dword str.payload      ; string
      push 1                      ; file descriptor (STDOUT)

      call "_write"
      add  esp, 16
    return null
